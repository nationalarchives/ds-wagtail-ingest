# Generated by Django 3.1.6 on 2021-02-02 15:23

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtaildocs', '0010_document_file_hash'),
        ('wagtailcore', '0059_apply_collection_ordering'),
        ('collections', '0004_auto_20210202_1517'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='video',
            name='content_tags',
        ),
        migrations.RemoveField(
            model_name='video',
            name='file',
        ),
        migrations.RemoveField(
            model_name='video',
            name='theme_tags',
        ),
        migrations.CreateModel(
            name='VideoPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('source_url', models.URLField()),
                ('body', models.TextField()),
                ('date_published', models.DateTimeField()),
                ('content_tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='collections.TaggedCategoryVideoItem', to='collections.CategoryTag', verbose_name='Tags')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document')),
                ('theme_tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='collections.TaggedThemeVideoItem', to='collections.ThemeTag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AudioPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('source_url', models.URLField()),
                ('body', models.TextField()),
                ('date_published', models.DateTimeField()),
                ('content_tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='collections.TaggedCategoryAudioItem', to='collections.CategoryTag', verbose_name='Tags')),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document')),
                ('theme_tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='collections.TaggedThemeAudioItem', to='collections.ThemeTag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterField(
            model_name='taggedcategoryaudioitem',
            name='content_object',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_content_items', to='collections.audiopage'),
        ),
        migrations.AlterField(
            model_name='taggedcategoryvideoitem',
            name='content_object',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_category_items', to='collections.videopage'),
        ),
        migrations.AlterField(
            model_name='taggedthemeaudioitem',
            name='content_object',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_theme_items', to='collections.audiopage'),
        ),
        migrations.AlterField(
            model_name='taggedthemevideoitem',
            name='content_object',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_video_items', to='collections.videopage'),
        ),
        migrations.DeleteModel(
            name='Audio',
        ),
        migrations.DeleteModel(
            name='Video',
        ),
    ]
